name: Build SM8250 MI Kernel
on:
  workflow_dispatch:
    inputs:
      phone:
        description: '选择手机型号：'
        required: true
        default: 'MI10'
        type: choice
        options:
          - MI10_Pro

      susfs:
        description: '是否集成SUSFS'
        required: true
        default: true
        type: boolean
      version:
        description: '自定义版本名（如perf-xxx）/可为空（则为n0kernel）'
        required: false
        type: string
jobs:
  build_job:
    runs-on: ubuntu-22.04
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      CI: "false"
    steps:

      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          swap-size-mb: 4096
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: 1.下载编译工具
        run: |
          mkdir -p $GITHUB_WORKSPACE/kernel_workspace
          cd $GITHUB_WORKSPACE/kernel_workspace
          wget -q https://github.com/ZyCromerZ/Clang/releases/download/12.0.1-20230207-release/Clang-12.0.1-20230207.tar.gz
          mkdir -p clang
          tar -xzf Clang-12.0.1-20230207.tar.gz -C clang

      - name: 2.克隆源码与补丁
        run: |
          cd $GITHUB_WORKSPACE/kernel_workspace
          git clone https://github.com/nobbs00/nikokernel_xiaomi_sm8250_mod_new.git --depth=1 android_kernel
          git clone https://github.com/zzh20188/AUTO_BUILD.git src
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b kernel-4.19 --depth=1 susfs

      - name: 3.安装SukiSU-Ultra
        run: |
          cd $GITHUB_WORKSPACE/kernel_workspace/android_kernel
          curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/susfs-dev/kernel/setup.sh" | bash -s susfs-dev

        
      - name: 6.开始构建
        run: |
          export PATH=$GITHUB_WORKSPACE/kernel_workspace/clang/bin:$PATH
          echo "Updated PATH: $PATH"
          clang --version
          
          cd $GITHUB_WORKSPACE/kernel_workspace/android_kernel
          # 自定义版本
          if [ ! -z ${{ inputs.version }} ]; then
            echo "不为空"
            sed -i 's/ -dirty//g' ./scripts/setlocalversion
            sed -i '$s|echo "\$res"|echo "-${{ inputs.version }}"|' ./scripts/setlocalversion
          else
            echo "字符串为空"
          fi

          case "${{ inputs.phone }}" in
              "MI10_Pro")
                  echo "选择小米10pro配置"
                  DEFCONFIG=vendor/cmi_user_defconfig
                  ;;
              *)
                  echo "非法内容"
                  ;;
          esac

          echo "当前配置为 $DEFCONFIG"
          echo '修改defconfig'
              scripts/config --file out/.config \
                  -e KSU \
                  -e KSU_MANUAL_HOOK \
                  -e KSU_SUSFS \
                  -e KSU_SUSFS_HAS_MAGIC_MOUNT \
                  -d KSU_SUSFS_SUS_PATH \
                  -e KSU_SUSFS_SUS_MOUNT \
                  -e KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT \
                  -e KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT \
                  -e KSU_SUSFS_SUS_KSTAT \
                  -d KSU_SUSFS_SUS_OVERLAYFS \
                  -e KSU_SUSFS_TRY_UMOUNT \
                  -e KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT \
                  -e KSU_SUSFS_SPOOF_UNAME \
                  -e KSU_SUSFS_ENABLE_LOG \
                  -e KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS \
                  -e KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG \
                  -d KSU_SUSFS_OPEN_REDIRECT \
                  -d KSU_SUSFS_SUS_SU

          sed -i '2s/check_defconfig//' ./build.config.gki

          make -j$(nproc --all) CC=clang O=out ARCH=arm64 CLANG_TRIPLE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1 CROSS_COMPILE=aarch64-buildroot-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-androideabi- $DEFCONFIG
          make -j$(nproc --all) CC=clang O=out ARCH=arm64 CLANG_TRIPLE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1 CROSS_COMPILE=aarch64-linux-android- CROSS_COMPILE_ARM32=arm-linux-androideabi-    
      
      - name: 7.查看成果
        run: |
            cd $GITHUB_WORKSPACE/kernel_workspace/android_kernel/out/arch/arm64/boot
            ls
            strings Image | grep "Linux version"
            cp Image $GITHUB_WORKSPACE/kernel_workspace/src/Anykernel/

      - name: 8.上传刷入包
        uses: actions/upload-artifact@v4
        with:
          name: KernelSU_NEXT_SUSFS_${{ github.event.inputs.phone}}
          path: kernel_workspace/src/Anykernel/*
          retention-days: 3
